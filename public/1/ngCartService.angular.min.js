function ngCart($rootScope,ngCartItem,store,$filter){this.isLoad=!1,this.$cart={items:[],shippingOption:{price:0,priceWithoutVat:0,date:null},shipping:0,shippingDate:null},this.init=function(){this.$cart.items=[]},this.loaded=function(){this.isLoad=!0,$rootScope.$broadcast("ngCart:load")},this.load=function(){return this.isLoad},this.addItemByObject=function(ngCartItem){var inCart=this.getItemById(ngCartItem.getId()),baseQuantity=0;"object"==typeof inCart&&(baseQuantity=inCart.getQuantity()),this.addItem(ngCartItem.getId(),ngCartItem.getName(),ngCartItem.getPrice(),baseQuantity+ngCartItem.getQuantity(),ngCartItem.getPicture(),ngCartItem.getData())},this.addItem=function(id,name,price,quantity,picture,data){var inCart=this.getItemById(id);if("object"==typeof inCart)inCart.setQuantity(quantity,!1),inCart.setPrice(price),inCart.setData(data),$rootScope.$broadcast("ngCart:itemUpdated",inCart);else{var newItem=new ngCartItem(id,name,price,quantity,picture,data);this.$cart.items.push(newItem),$rootScope.$broadcast("ngCart:itemAdded",newItem)}$rootScope.$broadcast("ngCart:change",{})},this.getItemById=function(itemId){var items=this.getCart().items,build=!1;return angular.forEach(items,function(item){item.getId()===itemId&&(build=item)}),build},this.setShippingOption=function(shippingOption){return this.$cart.shippingOption=shippingOption,this.getShippingOption()},this.getShippingOption=function(){return 0==this.getCart().items.length?0:this.getCart().shippingOption},this.setCart=function(cart){return this.$cart=cart,this.getCart()},this.getCart=function(){return this.$cart},this.getItems=function(){return this.getCart().items},this.getSortItemsBy=function(sort){return $filter("orderBy")(this.getItems(),sort)},this.getTotalItems=function(){var count=0,items=this.getItems();return angular.forEach(items,function(item){count+=item.getQuantity()}),count},this.getTotalUniqueItems=function(){return this.getCart().items.length},this.getSubTotal=function(){var total=0;return angular.forEach(this.getCart().items,function(item){total+=item.getTotal()}),+parseFloat(total).toFixed(2)},this.totalCost=function(){return+parseFloat(this.getSubTotal()+this.getShippingOption().price).toFixed(2)},this.getSubTotalWithoutVat=function(){var total=0;return angular.forEach(this.getCart().items,function(item){total+=item.getTotalWithoutVat()}),+parseFloat(total).toFixed(2)},this.totalCostWithoutVat=function(){return+parseFloat(this.totalCost()-(this.getSubTotalWithoutVat()+this.getShippingOption().priceWithoutVat)).toFixed(2)},this.removeItem=function(index){var item=this.$cart.items.splice(index,1)[0]||{};$rootScope.$broadcast("ngCart:itemRemoved",item),$rootScope.$broadcast("ngCart:change",{})},this.removeItemById=function(id){var cart=this.getCart();angular.forEach(cart.items,function(item,index){item.getId()===id&&(item=cart.items.splice(index,1)[0]||{},$rootScope.$broadcast("ngCart:itemRemoved",item))}),this.setCart(cart),$rootScope.$broadcast("ngCart:change",{})},this.empty=function(){$rootScope.$broadcast("ngCart:change",{}),this.$cart.items=[]},this.isEmpty=function(){return!(0<this.$cart.items.length)},this.toObject=function(){if(0===this.getItems().length)return!1;var items=[];return angular.forEach(this.getItems(),function(item){items.push(item.toObject())}),{shipping:this.getShippingOption(),subTotal:this.getSubTotal(),totalCost:this.totalCost(),items:items}},this.restore=function(storedCart){angular.merge($rootScope.vehicleList,storedCart.vehicleList),this.$restore(storedCart.items)},this.$restore=function(items){var _self=this;_self.init(),angular.forEach(items,function(item){_self.$cart.items.push(new ngCartItem(item.id,item.name,item.price,item.quantity,item.picture,item.data))}),_self.loaded(),_self.$save(),$rootScope.$broadcast("ngCart:restore",items)},this.$save=function(){}}function ngCartItem($rootScope,$log){var item=function(id,name,price,quantity,picture,data){this.setId(id),this.setName(name),this.setPrice(price),this.setQuantity(quantity),this.setPicture(picture),this.setData(data)};return item.prototype.setId=function(id){id?this.id=id:$log.error("An ID must be provided")},item.prototype.getId=function(){return this.id},item.prototype.setName=function(name){name?this.name=name:$log.error("A name must be provided")},item.prototype.getName=function(){return this.name},item.prototype.setPrice=function(price){var priceFloat=parseFloat(price);priceFloat?priceFloat<=0?$log.error("A price must be over 0"):this.price=priceFloat:$log.error("A price must be provided")},item.prototype.getPrice=function(){return this.price},item.prototype.setQuantity=function(quantity,relative){var quantityInt=parseInt(quantity);quantityInt%1==0?!0===relative?this.quantity+=quantityInt:this.quantity=quantityInt:(this.quantity=1,$log.info("Quantity must be an integer and was defaulted to 1"))},item.prototype.getQuantity=function(){return this.quantity},item.prototype.setPicture=function(picture){picture&&(this.picture=picture)},item.prototype.getPicture=function(){return this.picture},item.prototype.setData=function(data){data&&(this.data=data)},item.prototype.getData=function(){if(this.data)return this.data;$log.info("This item has no data")},item.prototype.getTotal=function(){return+parseFloat(this.getQuantity()*this.getPrice()).toFixed(2)},item.prototype.getTotalWithoutVat=function(){return+parseFloat(this.getQuantity()*this.getData().priceWithoutVat).toFixed(2)},item.prototype.toObject=function(){return{id:this.getId(),name:this.getName(),price:this.getPrice(),quantity:this.getQuantity(),picture:this.getPicture(),data:this.getData(),total:this.getTotal()}},item}function store($window){return{get:function(key){if($window.localStorage.getItem(key)){var cart=angular.fromJson($window.localStorage.getItem(key));return JSON.parse(cart)}return!1},set:function(key,val){return void 0===val?$window.localStorage.removeItem(key):$window.localStorage.setItem(key,angular.toJson(val)),$window.localStorage.getItem(key)}}}angular.module("dataApp").service("ngCart",ngCart),ngCart.$inject=["$rootScope","ngCartItem","store","$filter"],angular.module("dataApp").factory("ngCartItem",ngCartItem),ngCartItem.$inject=["$rootScope","$log"],angular.module("dataApp").factory("store",store),store.$inject=["$window"];